package HackerQues;
import java.util.Scanner;


/*
 Consider the below series:

 1, 2, 1, 3, 2, 5, 3, 7, 5, 11, 8, 13, 13, 17, …
 This series is a mixture of 2 series – all the odd terms in this series form a Fibonacci series and all the even terms are the prime numbers in ascending order.
  Write a program to find the Nth term in this series. 


 */
public class MixedSeries_Fibo_Prime {
	
	static int fibonacci(int num) {
		int first = 0;
		int second = 1;
		int next = 0;
		for(int i = 0;i < num-1;i++) {
			next = first+second;
			first = second;
			System.out.println(next);
			second = next;
		}
		return next;
	}
	
	static int primeNumber(int num) {
		int primes[] = new int[num+2];
		int ans = 0;
		for(int i = 0;i < primes.length;i++) {
			primes[i] = 1;
		}
		primes[0] = 0;
		primes[1] = 0;
		for(int i = 2;i < num/2;i++) {
			if(primes[i] == 1) {
				for(int j =2;i*j <= num;j++) {
					primes[i*j] = 0;
				}
			}
		}
		for(int i = primes.length-1;i >= 0;i-- ) {
			if(primes[i] == 1) {
				ans = i;	
				System.out.println(ans);
				break;
			}
		}
			
		return ans;
	}
	
	
	
	public static strictfp final synchronized void main(String ...args) {
		Scanner sc = new Scanner(System.in);
		int num = sc.nextInt();
		int i,j;
//		num--;
		int ans = 0;
		if(num % 2 == 0) {
			int n = num/2;
			ans =primeNumber(n);
		}
		else {
			int n = (num+1)/2;
			ans =  fibonacci(n);
		}
		System.out.println(ans);
	}

}
